apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

dependencies {
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-discovery'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-config'
    implementation(group: 'org.springframework.cloud', name: 'spring-cloud-starter-zipkin') {
        exclude group: 'io.zipkin.brave', module: 'brave-instrumentation-kafka-clients'
        exclude group: 'io.zipkin.brave', module: 'brave-instrumentation-kafka-streams'
        exclude group: 'io.zipkin.reporter2', module: 'zipkin-sender-activemq-client'
        exclude group: 'io.zipkin.reporter2', module: 'zipkin-sender-kafka'
    }

    implementation group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: adminVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-logging'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-amqp'

    implementation group: 'com.shit.code.cloud', name: 'shit-code-cloud-common', version: shitCodeLibVersion
    implementation group: 'com.alibaba', name: 'fastjson', version: fastJsonVersion
}

bootJar {
    //排除config目录
    rootSpec.exclude("**/config/")
    archiveBaseName.set(project.name)
    archiveVersion.set("")
}


bootRun {
    setMain("com.shit.code.cloud.infrastructure.${project.name.replace("infrastructure-", "")}.Main")
    systemProperties.put("spring.profiles.active", "dev")
    List<String> jvmArgList = new ArrayList<>()

//    jvmArgList.add("-client")
//    jvmArgList.add("-XX:+UnlockDiagnosticVMOptions")
//    jvmArgList.add("-XX:+PrintAssembly")
//    jvmArgList.add("-XX:+PrintCompilation")
//
//    jvmArgList.add("-XX:CompileCommand='print,com.shit.code.infrastructure.gateway.test.TestController.test'")
    setJvmArgs(jvmArgList)
}

processResources {
    from(rootDir.path + File.separator + "config" + File.separator + "local") {
        include '**'
    }
}